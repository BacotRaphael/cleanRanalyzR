ui <- shiny::fluidPage(
  shiny::tags$head(
    shiny::includeCSS("www/style.css")
  ),
  shinyjs::useShinyjs(),
  shiny::titlePanel("cleanRanalyR: Generate cleaning log, clean dataset and run Analysis"),
  shiny::sidebarLayout(
    shiny::sidebarPanel(
      shiny::selectizeInput(
        'operation', "What action do you want to perform ?", choices = setNames(c("clog","clean","analysis","xml_tolabel","label_toxml"),c("Produce a cleaning LOG","Clean DATA","Run Analysis","Convert XML to LABEL","Convert LABEL to XML")),
        options = list(
          placeholder = 'Choose one of the following options',
          onInitialize = I('function() { this.setValue(""); }')
        )
      ),
      shiny::uiOutput("ui.sampling"),
      shiny::uiOutput("ui.cluster"),
      shiny::uiOutput("ui.cloglabel"),
      shiny::uiOutput("ui.db"),
      shiny::uiOutput("ui.questionnaire"),
      shiny::uiOutput("ui.choiceslabel"),
      shiny::uiOutput("ui.surveylabel"),
      shiny::uiOutput("ui.clogdef"),
      shiny::uiOutput("ui.sf"),
      shiny::uiOutput("ui.data.stratum.column"),
      shiny::uiOutput("ui.sampling.frame.population.column"),
      shiny::uiOutput("ui.sampling.frame.stratum.column"),
      shiny::uiOutput("ui.cluster_variable_name"),
      shiny::uiOutput("ui.cl"),
      shiny::uiOutput("ui.dap"),
      shiny::uiOutput("ui.clog"),
      shiny::tags$hr(),
      shiny::actionButton("runchecks","RUN checks"),
      shiny::actionButton("runclean","CLEAN data"),
      shiny::actionButton("runres","RUN Analysis"),
      shiny::actionButton("runconv","CONVERT data"),
      shiny::tags$hr(),
      shiny::downloadButton("dwclog"),
      shiny::downloadButton("dwclean"),
      shiny::downloadButton("dwres"),
      shiny::downloadButton("dwconv"),
      shiny::helpText("Download will be available once the processing is completed.")
    )
    ,
    shiny::mainPanel(
      shiny::br(),
      p("Welcome to the cleanRanalyzR shiny app. This tool was developed to make the typical workflow of AO’s, data/database Officers smoother and less complicated. The app will help users run their data checks, clean the data and perform analysis in more efficient and automated way. No need for strong R background and technical capacities."),
      p("What this app will do for you :"),
      p("1/ Produce a cleaning LOG"),
      p("2/ Clean DATA"),
      p("3/ Run Analysis"),
      p("4/ Convert XML to LABEL"),
      p("5/ Convert LABEL to XML"),
      h3(strong("Produce a cleaning LOG "),style ="color:#EE5859"),
      p("When the users choose this option in the dropdown list" , strong("‘What action do you want to perform?’")," several field inputs will appear."),
      p(strong("dataset (.csv or .xlsx) :")),
      p("Users can upload data either in a .csv or .xlsx/.xls entension",code("Data format is really IMPORTANT to be able to use this app without facing any issues.")),
      p(strong("Value and header format should be in XML")),
      p(strong("Do not include groups in headers")),
      p(strong("Group separator should be a point (.)")),
      p("A tidy dataset should have a unique identifier “uuid” and don’t have duplicated variables, make sure the imported data follow those rules. Your dataset should be aligned with the data collection tool!"),
      p(strong("Questionnaire EXCEL workbook :")),
      p("Upload your XLSform (data collection tool) with the", strong("“survey”")," and", strong("“choices”"), "Place your questions of type text for", strong("other/autre"), "immediately after their parent questions (select_one/select_multiple). To detect all “other” columns, names should end with other/autre."),
      p("Select your choices/survey label columns."),
      p(strong("CleaningLog definition (.csv or .xlsx)")),
      p("To tell the app how it should run logical checks on the dataset, users should upload their cleaningLOG definition (CSV or XLSX). The file should contain 3 columns"),
      p(span("name",style="color:#EE5859"),"xml question name to check"),
      p(span("condition",style="color:#EE5859"),"An expression to be evaluated. We can use Boolean expression, R base operators, custom functions (as long as the function returns a logical vector TRUE/FALSE). When evaluating the condition, the output expected is a logical vector (TRUE/FALSE) of the same length as your dataset. See example below"),
      p(span("problem",style="color:#EE5859"),"A description of the issue/error that will be displayed in the cleaning LOG"),
      p("I encourage you to use the function", strong("sm_selected()"), "of the package composr to set condition on select_multiple questions. Please reach out to IMPACT DATA UNIT for vignettes/documentation/examples."),
      p("Beside the logical checks implemented in the cleaning LOG definition, the app will list all answers of type text reported in the “Other, please specify” questions"),
      p("For XML haters, you can label your cleaning LOG by selecting “yes” in ",strong("“Do you want to label question/answers in the cleaning LOG”"), "field."),
      tableOutput("ex_logdef"),
      p("Once users uploaded the required inputs, the button", strong("RUN checks"), "will be enabled and they can start the checking. Once computations are done, the button", strong("Download Cleaning LOG"), "will be also enabled to download the cleaning LOG"),
      h3(strong("Clean DATA"),style ="color:#EE5859"),
      p(strong("dataset (.csv or .xlsx) :")),
      p("Please see section above"),
      p(strong("Questionnaire EXCEL workbook :")),
      p("Please see section above"),
      p(strong("Cleaning LOG (.csv or .xlsx)")),
      p("The cleaning LOG that you will produce in the previous section contains: "),
      p(span("uuid",style ="color:#EE5859")," :Unique identifier"),
      p(span("question.name",style ="color:#EE5859")," :XML question name"),
      p(span("old.value",style ="color:#EE5859"),
      p(span("new.value",style ="color:#EE5859")," :If applicable"),
      p(span("parent.other.question",style ="color:#EE5859"), " :Since the check running step will list all “other” answers, this column will have the parent xml question."),
      p(span("parent.other.answer",style ="color:#EE5859")," :Since the checks running step will list all “other” answers, this column will have the answers of the parent question. This is helpful to decide if we should keep other as an option, or a similar option was already selected or we have a similar option in the list of choices and other should be replaced."),
      p(span("action",style ="color:#EE5859"), " :we specify how to treat each row of the cleaning log. Below the different possible actions (inspired from Olivier Cecchi scripts)"),
      p(span("check",style ="color:#58585A"), " :No action will be performed"),
      p(span("remove",style ="color:#58585A"), " :Survey will be removed"),
      p(span("change",style ="color:#58585A"), " :old.value will be replaced by new.value for question.name"),
      p(span("recode",style ="color:#58585A"), " :parent.other.answer will be replaced by new.value for parent.other.question"),
      p(span("recode_all",style ="color:#58585A"), " :all answers of question.name that matches old.value will be replaced by new.value"),
      p(strong("NB: For select_multiple questions cleaning, we focus on the non-binary columns, the app will automatically update all the binary columns"),
      p("Once users uploaded the required inputs, the button", strong("CLEAN data"), "will be enabled and they can start the cleaning. Once computations are done, the button", strong("Download clean data"), "will be also enabled to download the Output.")),
      tableOutput("ex_log"),
      h3(strong("Run Analysis"),style ="color:#EE5859"),
      p("A wrapper for the package",strong("HypegrammaR"), "Please reach out to IMPACT DATA Unit for vignettes/documentation on how to use this package"),
      p("The app let you run weighted (stratified or cluster probability) or non weighted analysis and set your confidence level"),
      p("The possible cases for your DAP (Data Analysis Plan) are:"),
      p("direct_reporting, direct_reporting_median, direct_reporting_sum, group_difference, group_difference_median, group_difference_sum"),
      p("Once users uploaded the required inputs, the button", strong("RUN analysis"), "will be enabled and they can start the analysis. Once computations are done, the button", strong("Download results"), "will be also enabled to download the Output.")),
      p("Please reach out to IMPACT DATA UNIT if you don't know what kind of input you should upload. Explaining how", strong("HypegrammaR"), "works is out of the scope"),
      p(strong("dataset (.csv or .xlsx) :")),
      p("Please see section above"),
      p(strong("Questionnaire EXCEL workbook :")),
      p("Please see section above"),
      h3(strong("Convert XML to LABEL"),style ="color:#EE5859"),
      p(strong("dataset (.csv or .xlsx) :")),
      p("Please see section above"),
      p(strong("Questionnaire EXCEL workbook :")),
      p("Please see section above"),
      p("As you might have guessed, this action will label your XML formatted data."),
      p(strong("REMINDR: Value and header format should be in XML, do not include groups in headers, group separator should be a point (.), no duplicated column. If questions/options were added, update your XLSform tool.")),
      p("Once users uploaded the required inputs, the button", strong("CONVERT data"), "will be enabled. Once computations are done, the button", strong("Download Converted DATA"), "will be also enabled to download the Output."),
      h3(strong("Convertir LABEL en XML"),style ="color:#EE5859"),
      p(strong("Questionnaire EXCEL workbook :")),
      p("Please see section above"),
      p("As you might have guessed, this action will convert labeled data to XML."),
      p(strong("REMINDER: group separator should be a point (.) and not a slash (/), do not include groups in headers, no duplicated column. If questions/options were added, update your XLSform tool. KOBOtoolbox will warn you when you are trying to upload the tool that has duplicated “name” which is not the case if you have duplicated “label”. Be careful, you should have unique labeled headers to run this option.")),
      p("Once users uploaded the required inputs, the button", strong("CONVERT data"), "will be enabled. Once computations are done, the button", strong("Download Converted DATA"), "will be also enabled to download the Output."),
      shiny::br()
    )
  )
)